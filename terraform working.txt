terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

provider "aws" {
  region = "us-east-1"
}

resource "aws_launch_configuration" "project" {
  name = "project"
  image_id = "ami-06aa3f7caf3a30282"
  instance_type = "t2.micro"

  lifecycle {
    create_before_destroy = true
  }
}

resource "aws_autoscaling_group" "project" {
  name                 = "example-autoscaling-group"
  desired_capacity     = 2
  max_size             = 5
  min_size             = 2
  vpc_zone_identifier = ["subnet-06f896934a51336ac"]

  launch_configuration = aws_launch_configuration.project.id

  health_check_type          = "EC2"
  health_check_grace_period  = 300

  force_delete = true
}

resource "aws_autoscaling_schedule" "refresh_schedule" {
  scheduled_action_name  = "refresh_schedule"
  min_size               = 0
  max_size               = 0
  desired_capacity       = 0
  recurrence             = "0 0 * * *"
  autoscaling_group_name = aws_autoscaling_group.project.name
}

resource "aws_autoscaling_policy" "scale_up" {
  name                   = "scale_up"
  scaling_adjustment    = 1
  adjustment_type       = "ChangeInCapacity"
  cooldown              = 300
  autoscaling_group_name = aws_autoscaling_group.project.name
}

resource "aws_autoscaling_policy" "scale_down" {
  name                   = "scale_down"
  scaling_adjustment    = -1
  adjustment_type       = "ChangeInCapacity"
  cooldown              = 300
  autoscaling_group_name = aws_autoscaling_group.project.name
}

resource "aws_cloudwatch_metric_alarm" "scale_up_alarm" {
  alarm_name          = "scale_up_alarm"
  comparison_operator = "GreaterThanOrEqualToThreshold"
  evaluation_periods  = 1
  metric_name         = "Load5"
  namespace           = "System/Linux"
  period              = 300
  statistic           = "Average"
  threshold           = 75
  alarm_actions       = [aws_autoscaling_policy.scale_up.arn]
}

resource "aws_cloudwatch_metric_alarm" "scale_down_alarm" {
  alarm_name          = "scale_down_alarm"
  comparison_operator = "LessThanOrEqualToThreshold"
  evaluation_periods  = 1
  metric_name         = "Load5"
  namespace           = "System/Linux"
  period              = 300
  statistic           = "Average"
  threshold           = 50
  alarm_actions       = [aws_autoscaling_policy.scale_down.arn]
}

resource "aws_sns_topic" "scaling_alerts" {
  name = "scaling_alerts"
}

resource "aws_sns_topic_subscription" "scale_up_subscription" {
  topic_arn = aws_sns_topic.scaling_alerts.arn
  protocol  = "email"
  endpoint  = "vishnu2343@gmail.com"
}

resource "aws_sns_topic_subscription" "scale_down_subscription" {
  topic_arn = aws_sns_topic.scaling_alerts.arn
  protocol  = "email"
  endpoint  = "vishnu2343@gmail.com"
}

resource "aws_sns_topic_subscription" "refresh_subscription" {
  topic_arn = aws_sns_topic.scaling_alerts.arn
  protocol  = "email"
  endpoint  = "vishnu2343@gmail.com"
}